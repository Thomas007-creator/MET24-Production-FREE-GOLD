version: '3.8'

services:
  # Traefik Reverse Proxy with SSL - Coolify Managed
  traefik:
    image: 'traefik:v2.10'
    container_name: traefik-ai-buddy-${COOLIFY_RESOURCE_UUID}-${COOLIFY_CONTAINER_ID}
    command:
      - '--api.dashboard=true'
      - '--api.insecure=true'
      - '--providers.docker=true'
      - '--providers.docker.exposedbydefault=false'
      - '--entrypoints.web.address=:80'
      - '--entrypoints.websecure.address=:443'
      - '--certificatesresolvers.letsencrypt.acme.tlschallenge=true'
      - '--certificatesresolvers.letsencrypt.acme.email=${SSL_EMAIL}'
      - '--certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json'
      - '--entrypoints.web.http.redirections.entrypoint.to=websecure'
      - '--entrypoints.web.http.redirections.entrypoint.scheme=https'
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - '/var/run/docker.sock:/var/run/docker.sock:ro'
      - '${COOLIFY_RESOURCE_UUID}_traefik-ssl-certs:/letsencrypt'
    restart: unless-stopped
    networks:
      met24-network: null
      ${COOLIFY_RESOURCE_UUID}: null
    labels:
      - coolify.managed=true
      - coolify.version=4.0.0-beta.428
      - coolify.applicationId=${COOLIFY_APPLICATION_ID}
      - coolify.type=application
      - coolify.name=traefik-ai-buddy-${COOLIFY_RESOURCE_UUID}-${COOLIFY_CONTAINER_ID}
      - coolify.resourceName=${COOLIFY_RESOURCE_NAME}
      - coolify.projectName=${COOLIFY_PROJECT_NAME}
      - coolify.serviceName=${COOLIFY_SERVICE_NAME}
      - coolify.environmentName=${COOLIFY_ENVIRONMENT_NAME}
      - coolify.pullRequestId=${COOLIFY_PULL_REQUEST_ID}
    environment:
      COOLIFY_BRANCH: '"main"'
      COOLIFY_RESOURCE_UUID: ${COOLIFY_RESOURCE_UUID}
      COOLIFY_CONTAINER_NAME: traefik-ai-buddy-${COOLIFY_RESOURCE_UUID}-${COOLIFY_CONTAINER_ID}
      SERVICE_URL_MET24_USER_APP: ${SERVICE_URL_MET24_USER_APP}
      SERVICE_FQDN_MET24_USER_APP: ${SERVICE_FQDN_MET24_USER_APP}
      SERVICE_URL_MET24_MCP_BRIDGE: ${SERVICE_URL_MET24_MCP_BRIDGE}
      SERVICE_FQDN_MET24_MCP_BRIDGE: ${SERVICE_FQDN_MET24_MCP_BRIDGE}
      SERVICE_NAME_TRAEFIK: traefik
      SERVICE_NAME_MET24_USER_APP: met24-user-app
      SERVICE_NAME_MET24_MCP_BRIDGE: met24-mcp-bridge

  # MET2.4 User App - AI Buddy Production (Coolify Managed)
  met24-user-app:
    build:
      context: .
      dockerfile: Dockerfile.production
    container_name: met24-user-app-ai-buddy-${COOLIFY_RESOURCE_UUID}-${COOLIFY_CONTAINER_ID}
    environment:
      NODE_ENV: production
      REACT_APP_NODE_ENV: production
      REACT_APP_API_URL: 'https://www.your-future-self.app/api'
      REACT_APP_SUPABASE_URL: '${REACT_APP_SUPABASE_URL}'
      REACT_APP_SUPABASE_ANON_KEY: '${REACT_APP_SUPABASE_ANON_KEY}'
      REACT_APP_MCP_BRIDGE_URL: 'https://www.your-future-self.app/mcp'
      VAPID_PUBLIC_KEY: '${VAPID_PUBLIC_KEY}'
      VAPID_PRIVATE_KEY: '${VAPID_PRIVATE_KEY}'
      VAPID_EMAIL: '${VAPID_EMAIL}'
      # Coolify Environment Variables
      COOLIFY_BRANCH: '"main"'
      COOLIFY_RESOURCE_UUID: ${COOLIFY_RESOURCE_UUID}
      COOLIFY_CONTAINER_NAME: met24-user-app-ai-buddy-${COOLIFY_RESOURCE_UUID}-${COOLIFY_CONTAINER_ID}
      SERVICE_URL_MET24_USER_APP: ${SERVICE_URL_MET24_USER_APP}
      SERVICE_FQDN_MET24_USER_APP: ${SERVICE_FQDN_MET24_USER_APP}
      SERVICE_URL_MET24_MCP_BRIDGE: ${SERVICE_URL_MET24_MCP_BRIDGE}
      SERVICE_FQDN_MET24_MCP_BRIDGE: ${SERVICE_FQDN_MET24_MCP_BRIDGE}
      COOLIFY_URL: '${COOLIFY_URL}'
      COOLIFY_FQDN: ${COOLIFY_FQDN}
      SERVICE_NAME_TRAEFIK: traefik
      SERVICE_NAME_MET24_USER_APP: met24-user-app
      SERVICE_NAME_MET24_MCP_BRIDGE: met24-mcp-bridge
    restart: unless-stopped
    healthcheck:
      test:
        - CMD
        - curl
        - '-f'
        - 'http://localhost:3000/health'
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      met24-network: null
      ${COOLIFY_RESOURCE_UUID}: null
    labels:
      # Traefik Labels
      - traefik.enable=true
      - traefik.http.routers.user-app.rule=Host(`www.your-future-self.app`)
      - traefik.http.routers.user-app.entrypoints=websecure
      - traefik.http.routers.user-app.tls.certresolver=letsencrypt
      - traefik.http.services.user-app.loadbalancer.server.port=3000
      # Coolify Labels
      - coolify.managed=true
      - coolify.version=4.0.0-beta.428
      - coolify.applicationId=${COOLIFY_APPLICATION_ID}
      - coolify.type=application
      - coolify.name=met24-user-app-ai-buddy-${COOLIFY_RESOURCE_UUID}-${COOLIFY_CONTAINER_ID}
      - coolify.resourceName=${COOLIFY_RESOURCE_NAME}
      - coolify.projectName=${COOLIFY_PROJECT_NAME}
      - coolify.serviceName=${COOLIFY_SERVICE_NAME}
      - coolify.environmentName=${COOLIFY_ENVIRONMENT_NAME}
      - coolify.pullRequestId=${COOLIFY_PULL_REQUEST_ID}
      # Additional Traefik Middleware
      - traefik.enable=true
      - traefik.http.middlewares.gzip.compress=true
      - traefik.http.middlewares.http-0-${COOLIFY_RESOURCE_UUID}-met24-user-app-stripprefix.stripprefix.prefixes=${SERVICE_URL_MET24_USER_APP}
      - traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https
      - traefik.http.routers.http-0-${COOLIFY_RESOURCE_UUID}-met24-user-app.entryPoints=http
      - 'traefik.http.routers.http-0-${COOLIFY_RESOURCE_UUID}-met24-user-app.middlewares=http-0-${COOLIFY_RESOURCE_UUID}-met24-user-app-stripprefix,gzip'
      - 'traefik.http.routers.http-0-${COOLIFY_RESOURCE_UUID}-met24-user-app.rule=Host(``) && PathPrefix(`${SERVICE_URL_MET24_USER_APP}`)'
      # Caddy Labels (for compatibility)
      - 'caddy_0.encode=zstd gzip'
      - 'caddy_0.handle_path.0_reverse_proxy={{upstreams}}'
      - 'caddy_0.handle_path=${SERVICE_URL_MET24_USER_APP}*'
      - caddy_0.header=-Server
      - 'caddy_0.try_files={path} /index.html /index.php'
      - 'caddy_0=://'
      - caddy_ingress_network=${COOLIFY_RESOURCE_UUID}

  # MCP Bridge - AI Buddy Production (Coolify Managed)
  met24-mcp-bridge:
    build:
      context: .
      dockerfile: Dockerfile.mcp-bridge
    container_name: met24-mcp-bridge-ai-buddy-${COOLIFY_RESOURCE_UUID}-${COOLIFY_CONTAINER_ID}
    ports:
      - '3001:3001'
    environment:
      NODE_ENV: production
      REACT_APP_NODE_ENV: production
      REACT_APP_API_URL: 'https://www.your-future-self.app/api'
      REACT_APP_SUPABASE_URL: '${REACT_APP_SUPABASE_URL}'
      REACT_APP_SUPABASE_ANON_KEY: '${REACT_APP_SUPABASE_ANON_KEY}'
      MCP_API_KEY: '${MCP_API_KEY}'
      GROK_API_KEY: '${GROK_API_KEY}'
      OPENAI_API_KEY: '${OPENAI_API_KEY}'
      ANTHROPIC_API_KEY: '${ANTHROPIC_API_KEY}'
      VAPID_PUBLIC_KEY: '${VAPID_PUBLIC_KEY}'
      VAPID_PRIVATE_KEY: '${VAPID_PRIVATE_KEY}'
      VAPID_EMAIL: '${VAPID_EMAIL}'
      # Coolify Environment Variables
      COOLIFY_BRANCH: '"main"'
      COOLIFY_RESOURCE_UUID: ${COOLIFY_RESOURCE_UUID}
      COOLIFY_CONTAINER_NAME: met24-mcp-bridge-ai-buddy-${COOLIFY_RESOURCE_UUID}-${COOLIFY_CONTAINER_ID}
      SERVICE_URL_MET24_USER_APP: ${SERVICE_URL_MET24_USER_APP}
      SERVICE_FQDN_MET24_USER_APP: ${SERVICE_FQDN_MET24_USER_APP}
      SERVICE_URL_MET24_MCP_BRIDGE: ${SERVICE_URL_MET24_MCP_BRIDGE}
      SERVICE_FQDN_MET24_MCP_BRIDGE: ${SERVICE_FQDN_MET24_MCP_BRIDGE}
      COOLIFY_URL: '${COOLIFY_URL}'
      COOLIFY_FQDN: ${COOLIFY_FQDN}
      SERVICE_NAME_TRAEFIK: traefik
      SERVICE_NAME_MET24_USER_APP: met24-user-app
      SERVICE_NAME_MET24_MCP_BRIDGE: met24-mcp-bridge
    restart: unless-stopped
    healthcheck:
      test:
        - CMD
        - curl
        - '-f'
        - 'http://localhost:3001/health'
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      met24-network: null
      ${COOLIFY_RESOURCE_UUID}: null
    labels:
      # Traefik Labels
      - traefik.enable=true
      - 'traefik.http.routers.mcp-bridge.rule=Host(`www.your-future-self.app`) && PathPrefix(`/mcp`)'
      - traefik.http.routers.mcp-bridge.entrypoints=websecure
      - traefik.http.routers.mcp-bridge.tls.certresolver=letsencrypt
      - traefik.http.services.mcp-bridge.loadbalancer.server.port=3001
      # Coolify Labels
      - coolify.managed=true
      - coolify.version=4.0.0-beta.428
      - coolify.applicationId=${COOLIFY_APPLICATION_ID}
      - coolify.type=application
      - coolify.name=met24-mcp-bridge-ai-buddy-${COOLIFY_RESOURCE_UUID}-${COOLIFY_CONTAINER_ID}
      - coolify.resourceName=${COOLIFY_RESOURCE_NAME}
      - coolify.projectName=${COOLIFY_PROJECT_NAME}
      - coolify.serviceName=${COOLIFY_SERVICE_NAME}
      - coolify.environmentName=${COOLIFY_ENVIRONMENT_NAME}
      - coolify.pullRequestId=${COOLIFY_PULL_REQUEST_ID}
      # Additional Traefik Middleware
      - traefik.enable=true
      - traefik.http.middlewares.gzip.compress=true
      - traefik.http.middlewares.http-0-${COOLIFY_RESOURCE_UUID}-met24-mcp-bridge-stripprefix.stripprefix.prefixes=${SERVICE_URL_MET24_MCP_BRIDGE}
      - traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https
      - traefik.http.routers.http-0-${COOLIFY_RESOURCE_UUID}-met24-mcp-bridge.entryPoints=http
      - 'traefik.http.routers.http-0-${COOLIFY_RESOURCE_UUID}-met24-mcp-bridge.middlewares=http-0-${COOLIFY_RESOURCE_UUID}-met24-mcp-bridge-stripprefix,gzip'
      - 'traefik.http.routers.http-0-${COOLIFY_RESOURCE_UUID}-met24-mcp-bridge.rule=Host(``) && PathPrefix(`${SERVICE_URL_MET24_MCP_BRIDGE}`)'
      # Caddy Labels (for compatibility)
      - 'caddy_0.encode=zstd gzip'
      - 'caddy_0.handle_path.0_reverse_proxy={{upstreams}}'
      - 'caddy_0.handle_path=${SERVICE_URL_MET24_MCP_BRIDGE}*'
      - caddy_0.header=-Server
      - 'caddy_0.try_files={path} /index.html /index.php'
      - 'caddy_0=://'
      - caddy_ingress_network=${COOLIFY_RESOURCE_UUID}

volumes:
  traefik-ssl-certs:
    driver: local
  ${COOLIFY_RESOURCE_UUID}_traefik-ssl-certs:
    name: ${COOLIFY_RESOURCE_UUID}_traefik-ssl-certs

networks:
  met24-network:
    driver: bridge
  ${COOLIFY_RESOURCE_UUID}:
    name: ${COOLIFY_RESOURCE_UUID}
    external: true

configs: {}
secrets: {}
